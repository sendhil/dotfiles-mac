name: Docker Build and Publish

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'neovim/.config/nvim/**'
      - 'docker/neovim/Dockerfile.standalone'
      - 'docker/neovim/entrypoint.standalone.sh'
      - '.github/workflows/docker-publish.yml'
  pull_request:
    branches:
      - master
      - main
    paths:
      - 'neovim/.config/nvim/**'
      - 'docker/neovim/Dockerfile.standalone'
      - 'docker/neovim/entrypoint.standalone.sh'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'

env:
  DOCKER_USERNAME: sendhil
  IMAGE_NAME: neovim-dev

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/amd64,linux/arm64
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: docker/neovim/Dockerfile.standalone
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Update Docker Hub Description
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        repository: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        readme-filepath: ./docker/neovim/README.dockerhub.md